# Generated by Django 4.2.16 on 2024-10-25 22:17

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('module_name', models.CharField(max_length=100)),
                ('module_icon', models.TextField()),
                ('is_menu', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('module_url', models.TextField()),
                ('display_order', models.IntegerField(default=0)),
                ('module_description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='UserServices.modules')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField()),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, choices=[('USA', 'USA')], max_length=50, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('account_status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], max_length=50, null=True)),
                ('role', models.CharField(blank=True, choices=[('Admin', 'Admin'), ('User', 'User'), ('Vendor', 'Vendor'), ('Customer', 'Customer')], max_length=50, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=50)),
                ('social_media_links', models.JSONField(blank=True, null=True)),
                ('additional_details', models.JSONField(blank=True, null=True)),
                ('language', models.CharField(blank=True, choices=[('English', 'English')], max_length=50, null=True)),
                ('department', models.CharField(blank=True, choices=[('IT', 'IT'), ('HR', 'HR'), ('Finance', 'Finance'), ('Marketing', 'Marketing'), ('Sales', 'Sales'), ('Operations', 'Operations'), ('Logistics', 'Logistics'), ('Customer Service', 'Customer Service'), ('Production', 'Production'), ('Quality Control', 'Quality Control'), ('R&D', 'R&D'), ('Customer Service', 'Customer Service')], max_length=50, null=True)),
                ('designation', models.CharField(blank=True, choices=[('Manager', 'Manager'), ('Team Lead', 'Team Lead'), ('Developer', 'Developer'), ('Designer', 'Designer'), ('Analyst', 'Analyst'), ('Intern', 'Intern'), ('Other', 'Other')], max_length=50, null=True)),
                ('time_zone', models.CharField(blank=True, choices=[('UTC-05:00', 'UTC-05:00'), ('UTC-06:00', 'UTC-06:00'), ('UTC-07:00', 'UTC-07:00'), ('UTC-08:00', 'UTC-08:00'), ('UTC-09:00', 'UTC-09:00'), ('UTC-10:00', 'UTC-10:00'), ('UTC-04:00', 'UTC-04:00')], max_length=50, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('last_device', models.CharField(blank=True, max_length=50, null=True)),
                ('last_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, choices=[('USD', 'USD')], max_length=50, null=True)),
                ('domain_name', models.CharField(blank=True, max_length=50, null=True)),
                ('plan_type', models.CharField(blank=True, choices=[('Free', 'Free'), ('Paid', 'Paid')], max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('domain_user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserShippingAddress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address_type', models.CharField(blank=True, choices=[('Home', 'Home'), ('Work', 'Work'), ('Other', 'Other')], max_length=50, null=True)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=10)),
                ('country', models.CharField(choices=[('USA', 'USA')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPermissions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_view', models.BooleanField(default=False)),
                ('is_add', models.BooleanField(default=False)),
                ('is_edit', models.BooleanField(default=False)),
                ('is_delete', models.BooleanField(default=False)),
                ('domain_user_id', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserServices.modules')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('activity', models.TextField()),
                ('activity_type', models.CharField(blank=True, max_length=50)),
                ('activity_date', models.DateTimeField(auto_now_add=True)),
                ('activity_ip', models.GenericIPAddressField()),
                ('activity_device', models.CharField(max_length=50)),
                ('domain_user_id', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
